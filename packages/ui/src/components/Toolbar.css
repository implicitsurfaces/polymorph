.toolbar {
  position: absolute;
  z-index: 10; /* above the panels */
  top: 16px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: var(--tiny-gap);
  padding: var(--padding);
  background: var(--primary-background-color);
  border-radius: var(--border-radius);
}

.toolbar > img,
.toolbar > button {
	width: 32px;
	height: 32px;
	border: none;
	border-radius: var(--item-border-radius);
	background: none;
  margin: 0;
  padding: 0;
  flex-shrink: 0;
}

.toolbar > img:hover,
.toolbar > button:hover {
	background-color: var(--hovered-background-color);
}

.toolbar > img.is-active {
	background-color: var(--active-background-color);
}

/* This targets the toolbar's menu button.

   Note: While an open menu can be argued to be semantically "active", we
   prefer in this case using `--hovered-background-color` rather than
   `--active-background-color` since this is the most standard behavior for
   menus, which can be rationalize by the fact that it's a short-lived
   activation (it opens a transient modal that disappears on outside-click,
   rather than changing more permanently the application state).

   Also, it would be confusing to have two active items in the toolbar when
   the menu is open (the active tool + the menu button).
 */
.toolbar > button[data-state="open"] {
  background-color: var(--hovered-background-color);
}
